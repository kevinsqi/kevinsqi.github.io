{"version":3,"sources":["webpack:///./node_modules/classnames/index.js","webpack:///./src/components/Bio/profile-pic.jpg","webpack:///./src/components/Nav.js","webpack:///./src/components/Page.js","webpack:///./src/components/Bio/index.js","webpack:///./src/templates/blog-post.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","key","call","value","newClass","module","exports","default","Nav","props","React","createElement","className","Link","to","activeClassName","exact","href","Page","_ref","title","children","columnClassName","Layout","SEO","style","marginTop","Bio","data","useStaticQuery","author","site","siteMetadata","display","src","img_profile_pic","alt","width","height","BlogPostTemplate","_React$Component","_inheritsLoose","render","post","this","markdownRemark","siteTitle","previous","next","pageContext","frontmatter","description","excerpt","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","Component"],"mappings":"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","file":"component---src-templates-blog-post-js-3155bbcc4871a98a55c9.js","sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n  function classNames() {\n    var classes = '';\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (arg) {\n        classes = appendClass(classes, parseValue(arg));\n      }\n    }\n    return classes;\n  }\n  function parseValue(arg) {\n    if (typeof arg === 'string' || typeof arg === 'number') {\n      return arg;\n    }\n    if (typeof arg !== 'object') {\n      return '';\n    }\n    if (Array.isArray(arg)) {\n      return classNames.apply(null, arg);\n    }\n    if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n      return arg.toString();\n    }\n    var classes = '';\n    for (var key in arg) {\n      if (hasOwn.call(arg, key) && arg[key]) {\n        classes = appendClass(classes, key);\n      }\n    }\n    return classes;\n  }\n  function appendClass(value, newClass) {\n    if (!newClass) {\n      return value;\n    }\n    if (value) {\n      return value + ' ' + newClass;\n    }\n    return value + newClass;\n  }\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","module.exports = __webpack_public_path__ + \"static/profile-pic-befb56f5393fb096c6b5b0f12d6d4c23.jpg\";","import React from 'react';\nimport { Link } from 'gatsby';\nimport classNames from 'classnames';\n\nconst Nav = (props) => (\n  <nav className={classNames('display-font hide-for-printing', props.className)}>\n    <div className=\"Nav\">\n      <div className=\"flex-1\">\n        <Link to=\"/\" className=\"NavLink NavBrand display-font text-2 font-weight-500\">\n          Kevin Qi\n        </Link>\n      </div>\n      <div className=\"d-flex display-font\">\n        <Link to=\"/\" className=\"NavLink display-font\" activeClassName=\"NavLink--active\" exact>\n          Home\n        </Link>\n        {/*\n          <a href={'/assets/resume/resume_kevin_qi.pdf'} className=\"NavLink display-font\">\n            Resume\n          </a>\n          <Link to=\"/blog\" className=\"NavLink display-font\" activeClassName=\"NavLink--active\" exact>\n            Blog\n          </Link>\n        */}\n        <a\n          href=\"https://www.notion.so/kevinqi/Blog-Kevin-Qi-1cd8b1b382e04f5bbb9c1acb27f6796e\"\n          className=\"NavLink display-font\"\n        >\n          Blog\n        </a>\n        <a href=\"https://www.linkedin.com/in/kevin-qi-25b76710/\" className=\"NavLink display-font\">\n          LinkedIn\n        </a>\n        <a className=\"NavLink display-font\" href=\"https://github.com/kevinsqi\">\n          Github\n        </a>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Nav;\n","import React from 'react';\n\nimport Nav from './Nav';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n\nconst Page = ({ title, children, columnClassName }) => (\n  <Layout>\n    <SEO title={title} />\n    <div className=\"container py-5\">\n      <div className=\"row\">\n        <div className={columnClassName || 'col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2'}>\n          <Nav />\n\n          <div style={{ marginTop: 60 }}>{children}</div>\n        </div>\n      </div>\n    </div>\n  </Layout>\n);\n\nexport default Page;\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport img_profile_pic from './profile-pic.jpg';\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n        }\n      }\n    }\n  `);\n\n  const { author } = data.site.siteMetadata;\n  return (\n    <div\n      style={{\n        display: `flex`,\n      }}\n    >\n      <img\n        src={img_profile_pic}\n        alt={author}\n        className=\"rounded-circle\"\n        style={{ width: 70, height: 70 }}\n      />\n      <p className=\"ml-3\">\n        Personal blog by <strong>{author}</strong>.\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/Bio';\nimport Page from '../components/Page';\nimport SEO from '../components/SEO';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n\n    return (\n      <Page title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <article className=\"BlogPost\">\n              <header>\n                <h1>{post.frontmatter.title}</h1>\n                <p className=\"text-secondary small\">{post.frontmatter.date}</p>\n              </header>\n              <section dangerouslySetInnerHTML={{ __html: post.html }} />\n              <hr className=\"mt-5\" />\n              <footer className=\"mt-5\">\n                <Bio />\n              </footer>\n            </article>\n\n            <nav className=\"mt-5\">\n              <ul\n                style={{\n                  display: `flex`,\n                  flexWrap: `wrap`,\n                  justifyContent: `space-between`,\n                  listStyle: `none`,\n                  padding: 0,\n                }}\n              >\n                <li>\n                  {previous && (\n                    <Link to={previous.fields.slug} rel=\"prev\">\n                      ← {previous.frontmatter.title}\n                    </Link>\n                  )}\n                </li>\n                <li>\n                  {next && (\n                    <Link to={next.fields.slug} rel=\"next\">\n                      {next.frontmatter.title} →\n                    </Link>\n                  )}\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </Page>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}